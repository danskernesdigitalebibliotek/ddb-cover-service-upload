openapi: 3.0.2
info:
  title: 'DDF Cover Service Upload'
  version: 1.0.0
  description: |
    This service allows for uploading covers for library materials indexed by isbn, issn, faust, pid. Uploaded covers become available on [DDB Cover Service](https://cover.dandigbib.org/).
    The service is provided by [Det Digitale Folkebibliotek](https://detdigitalefolkebibliotek.dk/section/i-brug-paa-biblioteket/cover-service)
    ### Authentication notes
    Authentication is done via OAuth2 against auth.dbc.dk. To obtain a valid token follow the instructions here: [Open Platform](https://openplatform.dbc.dk/v3/). To use the "Authorize" option in this tool use your 'client_id' and 'client_secret' and fill in '@agency' (e.g. '@123456') for both username and password.
paths:
  /api/covers:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cover:
                  type: string
                  format: binary
      tags:
        - Cover
      operationId: postCoverCollection
      summary: 'Creates a Cover resource.'
      responses:
        201:
          description: 'Cover resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cover-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Cover-Read'
          links:
            GetCoverItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCoverItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/covers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
    get:
      tags:
        - Cover
      operationId: getCoverCollection
      summary: 'Retrieves the collection of Cover resources.'
      responses:
        200:
          description: 'Cover collection response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover-Read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover-Read'
      parameters: []
  '/api/covers/{id}':
    get:
      tags:
        - Cover
      operationId: getCoverItem
      summary: 'Retrieves a Cover resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Cover resource response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cover-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Cover-Read'
        404:
          description: 'Resource not found'
  /api/materials:
    get:
      tags:
        - Material
      operationId: getMaterialCollection
      summary: 'Retrieves the collection of Material resources.'
      responses:
        200:
          description: 'Material collection response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Material-Read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Material-Read'
      parameters: []
    post:
      tags:
        - Material
      operationId: postMaterialCollection
      summary: 'Creates a Material resource.'
      responses:
        201:
          description: 'Material resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Material-Read'
          links:
            GetMaterialItem:
              parameters:
                id: '$response.body#/id'
              operationId: getMaterialItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /api/materials/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Material-Write'
          text/html:
            schema:
              $ref: '#/components/schemas/Material-Write'
        description: 'The new Material resource'
  '/api/materials/{id}':
    get:
      tags:
        - Material
      operationId: getMaterialItem
      summary: 'Retrieves a Material resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Material resource response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material-Read'
            text/html:
              schema:
                $ref: '#/components/schemas/Material-Read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Material
      operationId: deleteMaterialItem
      summary: 'Removes the Material resource.'
      responses:
        204:
          description: 'Material resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
security:
  -
    oauth: []
components:
  schemas:
    Cover-Read:
      type: object
      description: ''
      externalDocs:
        url: 'http://schema.org/MediaObject'
      properties:
        id:
          readOnly: true
          type: integer
        imageUrl:
          type: string
          format: url
          example: 'https://upload.cover.dandigbib.org/cover/5ed65baa2b264_870970-basis%3A52890365.jpg'
          externalDocs:
            url: 'http://schema.org/contentUrl'
          nullable: true
        size:
          type: integer
          example: 769822
        agencyId:
          type: string
          example: '123456'
    Material-Read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: integer
        isIdentifier:
          type: string
          example: '870970-basis:29862885'
        isType:
          type: string
          enum:
            - faust
            - isbn
            - issn
            - pid
          example: pid
        agencyId:
          type: string
          example: '123456'
        cover:
          type: object
          example:
            id: 1
            imageUrl: 'https://upload.cover.dandigbib.org/cover/5ed65baa2b264_870970-basis%3A52890365.jpg'
            size: 1478312
            agencyId: '123456'
          externalDocs:
            url: 'http://schema.org/image'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Cover-Read'
    Material-Write:
      type: object
      description: ''
      properties:
        isIdentifier:
          type: string
          example: '870970-basis:29862885'
        isType:
          type: string
          enum:
            - faust
            - isbn
            - issn
            - pid
          example: pid
        cover:
          externalDocs:
            url: 'http://schema.org/image'
          type: string
          format: iri-reference
          example: api/covers/1
  securitySchemes:
    oauth:
      type: oauth2
      description: 'OAuth 2.0 password Grant'
      flows:
        password:
          tokenUrl: 'https://login.bib.dk/oauth/token'
          scopes: {  }
