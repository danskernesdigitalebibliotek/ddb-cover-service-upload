---
on:
  push:
    branches-ignore:
      - '*'
    tags:
      - '*'
name: Production release

env:
  ORG_NAME: danskernesdigitalebibliotek
  NAMESPACE: cover-service
  RSG: CoverService
  CNAME: ddb-cover-service

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Login to github package registry
        run: docker login --username secrets.DOCKER_USERNAME --password "${{ secrets.DOCKER_PASSWORD }}"

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build CoverService image
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: docker build --build-arg APP_VERSION=${{ RELEASE_VERSION }} --tag="danskernesdigitalebibliotek/cover-service-upload:${{ RELEASE_VERSION }}" --file="infrastructure/docker/cover-service-upload/Dockerfile" infrastructure/docker/cover-service-upload

      - name: Build nginx side-car image
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: docker build --build-arg VERSION=${{ RELEASE_VERSION }} --tag="danskernesdigitalebibliotek/cover-service-upload-nginx:${{ RELEASE_VERSION }}" --file="infrastructure/docker/nginx/Dockerfile" infrastructure/docker/nginx

      - name: Push CoverService image
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: docker push danskernesdigitalebibliotek/cover-service-upload:${{ RELEASE_VERSION }}

      - name: Push CoverService Nginx image
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: docker push danskernesdigitalebibliotek/cover-service-upload-nginx:${{ RELEASE_VERSION }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      build
    steps:
      - uses: actions/checkout@master

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Get the major version
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
        id: get_major_version
        run: echo ::set-output name=VERSION::${RELEASE_VERSION:0:1}

      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - name: Set AKS Context (Prod)
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS_PROD }}'
          cluster-name: ${{ env.CNAME }}
          resource-group: ${{ env.RSG }}

      - uses: azure/setup-helm@v1
        name: Install helm
        with:
          id: install

      - name: Deploy cover service
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
          MAJOR_VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: helm upgrade --install cover-service-upload-v${{ MAJOR_VERSION }} --namespace ${{ env.NAMESPACE }} --set app.image.version=${{ RELEASE_VERSION }} --set ingress.enableAuth=false --set ingress.enableTLS=true --set ingress.mail='itkdev@mkb-itkdev.dk' --set ingress.path=/v${{ MAJOR_VERSION }}/  --set ingress.domain=upload.cover.dandigbib.org
