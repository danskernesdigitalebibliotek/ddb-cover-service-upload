{{- if .Values.ingress.enabled }}
{{- if .Values.ingress.enableTLS }}
---
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  namespace: {{ .Release.Namespace }}
  name: letsencrypt
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory # production
    #server: https://acme-staging-v02.api.letsencrypt.org/directory # staging
    email: {{ required "A valid .Values.ingress.mail entry required!" .Values.ingress.mail | quote }}
    privateKeySecretRef:
      name: letsencrypt
    solvers:
      - http01:
          ingress:
            class:  nginx
{{- end }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    {{- if .Values.ingress.enableTLS }}
    cert-manager.io/cluster-issuer: letsencrypt
    {{- end }}
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    {{- if .Values.ingress.enableAuth }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{ .Release.Name }}-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    {{- end }}
spec:
  {{- if .Values.ingress.enableTLS }}
  tls:
    - hosts:
        - {{ required "A valid .Values.ingress.domain entry required!" .Values.ingress.domain | quote }}
      secretName: {{ .Release.Name }}-ingress-tls-secret
  {{- end }}
  rules:
    - host: {{ required "A valid .Values.ingress.domain entry required!" .Values.ingress.domain | quote }}
      http:
        paths:
          - backend:
              serviceName: {{ .Release.Name }}-service
              servicePort: 80
            path: /
{{- end }}
